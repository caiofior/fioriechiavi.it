<?php
namespace flora\dico;
if (!class_exists('Autoload')) {
   require __DIR__.'/../../../config/config.php';
   require __DIR__.'/../../../lib/flora/Autoload.php';
   $loader = new \Zend\Loader\StandardAutoloader(array(
    'autoregister_zf' => true,
    'fallback_autoloader' => true
   ));
   $loader->register();

   $config = new \Zend\Config\Config($configArray);
   $db = new \Zend\Db\Adapter\Adapter($config->database->toArray());
   \flora\Autoload::getInstance();
}
/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-09-22 at 17:19:42.
 */
class DicoItemTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var DicoItem
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new DicoItem($GLOBALS['db']);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
    public function testLoadFromIdAndDico () {
       $this->object->loadFromIdAndTaxa(4, 0);
       $this->assertGreaterThan(0,sizeof(array_filter($this->object->getData())));
    }
    public function testReplace () {
       $this->object->loadFromIdAndTaxa(4, 0);
       $this->assertGreaterThan(0,sizeof(array_filter($this->object->getData())));
       $this->object->setData(8, 'taxa_id');
       $this->object->replace();
       $this->object->loadFromIdAndTaxa(4, 0);
       var_dump($this->object->getData());
    }
}
